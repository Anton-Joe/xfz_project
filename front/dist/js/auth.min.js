function Auth(){this.maskWrapper=$(".mask-wrapper"),this.scrollWrapper=$(".scroll-wrapper")}Auth.prototype.run=function(){var t=this;t.listenShowHideEvent(),t.listenSwitchEvent(),t.listenSigninEvent(),t.listenSMSCaptchaEvent()},Auth.prototype.listenSMSCaptchaEvent=function(){var o=$(".sms-captcha-btn"),e=$(".signup-group input[name='telephone']");o.click(function(){console.log("hello!");var t=e.val();t||window.messageBox.showInfo("请输入手机号码！"),xfzajax.get({url:"/account/sms_captcha/",data:{telephone:t},success:function(t){if(200==t.code){messageBox.showSuccess("短信验证码发送成功！"),o.addClass("disabled");var e=60,n=setInterval(function(){o.text(e+"s"),--e<=0&&(clearInterval(n),o.removeClass("disabled"),o.text("发送验证码"))},1e3)}},fail:function(t){console.log(t)}})})},Auth.prototype.showEvent=function(){this.maskWrapper.show()},Auth.prototype.hideEvent=function(){this.maskWrapper.hide()},Auth.prototype.listenShowHideEvent=function(){var t=this;$(".signin-btn").click(function(){t.scrollWrapper.css({left:0}),t.showEvent()}),$(".signup-btn").click(function(){t.scrollWrapper.css({left:-400}),t.showEvent()}),$(".close-btn").click(function(){$(".mask-wrapper").hide()})},Auth.prototype.listenSwitchEvent=function(){var e=this;$(".switch").click(function(){var t=e.scrollWrapper.css("left");0===(t=parseInt(t))?e.scrollWrapper.animate({left:-400},400):e.scrollWrapper.animate({left:0},400)})},Auth.prototype.listenSigninEvent=function(){var s=this,t=$(".signin-group"),o=t.find("input[name='telephone']"),i=t.find("input[name='password']"),a=t.find("input[name='remember']");t.find(".submit-btn").click(function(){var t=o.val(),e=i.val(),n=a.prop("checked");xfzajax.post({url:"/account/login/",data:{telephone:t,password:e,remember:n?1:0},success:function(t){if(200==t.code)s.hideEvent(),window.location.reload();else{var e=t.message;if("string"==typeof e||e.constructor==String)window.messageBox.show(e);else for(var n in e){var o=e[n][0];window.messageBox.show(o)}}},fail:function(t){console.log("error")}})})},$(function(){(new Auth).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
