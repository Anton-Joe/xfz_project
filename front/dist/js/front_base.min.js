function FrontBase(){}function Auth(){this.maskWrapper=$(".mask-wrapper"),this.scrollWrapper=$(".scroll-wrapper")}FrontBase.prototype.run=function(){this.listenAuthBoxHover()},FrontBase.prototype.listenAuthBoxHover=function(){var t=$(".auth-box"),n=$(".user-more-box");t.hover(function(){n.show()},function(){n.hide()})},$(function(){(new FrontBase).run()}),Auth.prototype.run=function(){var t=this;t.listenShowHideEvent(),t.listenSwitchEvent(),t.listenSigninEvent(),t.listenImgCaptchaEvent()},Auth.prototype.listenImgCaptchaEvent=function(){var t=$(".img-captcha");t.click(function(){t.attr("src","/account/img_captcha?random="+Math.random())})},Auth.prototype.showEvent=function(){this.maskWrapper.show()},Auth.prototype.hideEvent=function(){this.maskWrapper.hide()},Auth.prototype.listenShowHideEvent=function(){var t=this;$(".signin-btn").click(function(){t.scrollWrapper.css({left:0}),t.showEvent()}),$(".signup-btn").click(function(){t.scrollWrapper.css({left:-400}),t.showEvent()}),$(".close-btn").click(function(){$(".mask-wrapper").hide()})},Auth.prototype.listenSwitchEvent=function(){var n=this;$(".switch").click(function(){var t=n.scrollWrapper.css("left");0===(t=parseInt(t))?n.scrollWrapper.animate({left:-400},400):n.scrollWrapper.animate({left:0},400)})},Auth.prototype.listenSigninEvent=function(){var i=this,t=$(".signin-group"),o=t.find("input[name='telephone']"),r=t.find("input[name='password']"),s=t.find("input[name='remember']");t.find(".submit-btn").click(function(){var t=o.val(),n=r.val(),e=s.prop("checked");xfzajax.post({url:"/account/login/",data:{telephone:t,password:n,remember:e?1:0},success:function(t){if(200==t.code)i.hideEvent(),window.location.reload();else{var n=t.message;if("string"==typeof n||n.constructor==String)window.messageBox.show(n);else for(var e in n){var o=n[e][0];window.messageBox.show(o)}}},fail:function(t){console.log("error")}})})},$(function(){(new Auth).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
