function Banner(){this.bannerWidth=798,this.bannerGroup=$("#banner-group"),this.index=1,this.leftArrow=$(".left-arrow"),this.rightArrow=$(".right-arrow"),this.bannerUl=$("#banner-ul"),this.liList=this.bannerUl.children("li"),this.bannerCount=this.liList.length,this.pageControl=$(".page-control")}function Index(){var n=this;n.p=2,n.category_id=0,n.loadMoreBtn=$("#load-more-btn"),template.defaults.imports.timeSince=function(n){var t=new Date(n),e=t.getTime(),i=((new Date).getTime()-e)/1e3;return i<60?"刚刚":60<=i&&i<3600?parseInt(i/60)+"分钟前":3600<=i&&i<86400?parseInt(i/60/60)+"小时前":86400<=i&&i<2592e3?parseInt(i/60/60/24)+"天前":t.getFullYear()+"/"+t.getMonth()+"/"+t.getDay()+" "+t.getHours()+":"+t.getMinutes()}}Banner.prototype.run=function(){this.loop(),this.initPageControl(),this.listenArrorClick(),this.initBanner(),this.listenPageControl(),this.listenBannerHover()},Banner.prototype.animate=function(n){var t=this;t.bannerUl.animate({left:-798*t.index},n);var e=t.index;e=0===e?t.bannerCount-1:e===t.bannerCount+1?0:t.index-1,t.pageControl.children("li").eq(e).addClass("active").siblings().removeClass("active")},Banner.prototype.loop=function(){var n=this;this.timer=setInterval(function(){n.index>=n.bannerCount+1&&(n.bannerUl.css({left:-n.bannerWidth}),n.index=1),n.index=n.index+1,n.animate(500)},2e3)},Banner.prototype.listenArrorClick=function(){var n=this;n.leftArrow.click(function(){0===n.index?(n.bannerUl.css({left:-n.bannerCount*n.bannerWidth}),n.index=n.bannerCount-1):n.index--,n.animate(500)}),n.rightArrow.click(function(){n.index===n.bannerCount+1?(n.bannerUl.css({left:-n.bannerWidth}),n.index=2):n.index++,n.animate(500)})},Banner.prototype.initPageControl=function(){for(var n=this,t=0;t<n.bannerCount;t++){var e=$("<li></li>");n.pageControl.append(e),0===t&&e.addClass("active")}n.pageControl.css({width:10*n.bannerCount+16+16*(n.bannerCount-1)})},Banner.prototype.initBanner=function(){var n=this,t=n.liList.eq(0).clone(),e=n.liList.eq(n.bannerCount-1).clone();n.bannerUl.append(t),n.bannerUl.prepend(e),n.bannerUl.css({width:n.bannerWidth*(n.bannerCount+2),left:-n.bannerWidth})},Banner.prototype.toggleArrow=function(n){var t=this;n?(t.leftArrow.show(),t.rightArrow.show()):(t.leftArrow.hide(),t.rightArrow.hide())},Banner.prototype.listenBannerHover=function(){var n=this;this.bannerGroup.hover(function(){clearInterval(n.timer),n.toggleArrow(!0)},function(){n.loop(),n.toggleArrow(!1)})},Banner.prototype.listenPageControl=function(){var e=this;e.pageControl.children("li").each(function(n,t){$(t).click(function(){e.index=n+1,e.animate(500)})})},Index.prototype.run=function(){this.listenLoadMoreEvent(),this.listenCategorySwitchEvent()},Index.prototype.listenCategorySwitchEvent=function(){var o=this;$(".list-tab").children().click(function(){var r=$(this),a=$(this).attr("data-category");xfzajax.get({url:"/news/list/",data:{category_id:a,p:1},success:function(n){if(200===n.code){var t=n.data,e=template("news-item",{newses:t}),i=$(".list-inner-group");i.empty(),i.append(e),o.p=2,o.category_id=a,r.addClass("active").siblings().removeClass("active"),o.loadMoreBtn.show()}}})})},Index.prototype.listenLoadMoreEvent=function(){var i=this;i.loadMoreBtn.click(function(){xfzajax.get({url:"/news/list/",data:{p:i.p,category_id:i.category_id},success:function(n){if(200===n.code){var t=n.data;if(0<t.length){var e=template("news-item",{newses:t});$(".list-inner-group").append(e),i.p++}else i.loadMoreBtn.hide()}}})})},$(function(){(new Banner).run(),(new Index).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
